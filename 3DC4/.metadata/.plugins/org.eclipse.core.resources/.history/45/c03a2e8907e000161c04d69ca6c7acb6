package Model;

public class Player {

	private String name;
	private Disc.Color disc;
	private int score;
	public Board board;

	/*
	 * Constructor creates a Player with a name and a disc
	 */

	public Player(String name, Disc.Color disc) {
		this.name = name;
		this.disc = disc;
		this.score = 0;

	}

	/**
	 * 
	 * @return name
	 */

	public String getName() {
		return name;
	}

	/**
	 * 
	 * @return disc object
	 */
	public Disc.Color getDisc() {
		return disc;
	}

	/**
	 * 
	 * @return score
	 */

	public int getScore() {
		return score;
	}

	/**
	 * Ask the player for input to put the disc in checks if col is nor full
	 * 
	 * 
	 * @param board
	 */

	/*
	 * public void makeMove(Disc.Color[][] board) {
	 * 
	 * System.out.println("Drop a disc (0-6) :"); try (Scanner input = new
	 * Scanner(System.in)) { if (input.hasNext()) { int columnPosition =
	 * input.nextInt(); dropDisc(board, columnPosition, getDisc());
	 * 
	 * } } }
	 */

	public void makeMove(Board board) {
		int move = determineMove(board);

	}

	private abstract int determineMove(Board board2);
		
	

	/**
	 * Checkks a row if it is full and places a disc if it cannot drop a disc it
	 * returns false
	 * 
	 * 
	 * @param board
	 * @param columnPosition
	 * @param disc
	 */

}
