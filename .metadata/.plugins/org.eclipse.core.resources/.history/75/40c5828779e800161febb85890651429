package gameLogic;

import java.util.Scanner;

import Model.Board;
import Model.Disc;
import Model.Player;

public class HumanPlayer extends Player {

	public HumanPlayer(String name, Disc.Color disc) {
		// TODO Auto-generated constructor stub
		super(name, disc);

	}

	/**
	 * Prints out the instructions to play the game
	 */

	public void instructions() {
		System.out.println("Where do you want to drop your disc? X - Y  :");
		System.out.println("");
		System.out.println("");
	}

	/**
	 * Ask the Client for input for the x and y coordinates and them as a list
	 * Code keeps invoking the instructions method if the input does not meet
	 * the required format
	 * 
	 */

	@Override
	public int[] determineMove(Board board) {
		board.showCopy();

		int columnPosition = -1;
		int rowPosition = -1;
		int[] list = new int[2];

		do {
			instructions();
			@SuppressWarnings("resource")
			Scanner input = new Scanner(System.in);

			if (input.hasNextLine());
				scannerLine = new Scanner(input.nextLine());
			
			if (scannerLine.hasNextInt()) {
				columnPosition = scannerLine.nextInt();
				if (scannerLine.hasNextInt()) {
					rowPosition = scannerLine.nextInt();
				}
				list[0] = rowPosition;
				list[1] = columnPosition;
				if (columnPosition < 0 || columnPosition > 4 || rowPosition < 0 || rowPosition > 4
						|| board.canDrop(columnPosition, rowPosition) == false) {
					System.out.println("Your move is not allowed");
					System.out.println("");
				}
			}

		} while (columnPosition < 0 || columnPosition > 4 || rowPosition < 0 || rowPosition > 4
				|| board.canDrop(columnPosition, rowPosition) == false);

		return list;

	}
}
